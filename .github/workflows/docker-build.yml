name: Build and Push CloudPanel Docker Image

on:
  schedule:
    - cron: '0 0 * * *'  # Runs every day at midnight UTC
  push:
    branches:
      - main
  workflow_dispatch:  # Allows manual trigger

jobs:
  check-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get latest CloudPanel release
        run: |
          latest_version=$(curl -s https://api.github.com/repos/cloudpanel-io/cloudpanel-ce/releases/latest | jq -r .tag_name)
          echo "Latest release: $latest_version"
          echo "$latest_version" > latest_version.txt

      - name: Compare with existing version
        run: |
          current_version=$(cat version.txt 2>/dev/null || echo "none")
          latest_version=$(cat latest_version.txt)

          if [ "$current_version" != "$latest_version" ]; then
            echo "New version available: $latest_version"
            echo "true" > needs_build.txt
          else
            echo "Already up-to-date"
            echo "false" > needs_build.txt
          fi

      - name: Upload version info
        uses: actions/upload-artifact@v4
        with:
          name: version-info
          path: |
            latest_version.txt
            needs_build.txt

  build-and-push:
    needs: check-release
    runs-on: ubuntu-latest
    steps:
      - name: Download version info
        uses: actions/download-artifact@v4
        with:
          name: version-info

      - name: Read version info
        run: |
          latest_version=$(cat latest_version.txt)
          needs_build=$(cat needs_build.txt)

          echo "LATEST_VERSION=$latest_version" >> "$GITHUB_ENV"
          echo "NEEDS_BUILD=$needs_build" >> "$GITHUB_ENV"

      - name: Check if build is needed
        run: |
          if [ "$NEEDS_BUILD" != "true" ]; then
            echo "No new version to build. Skipping..."
            exit 0
          fi

      - name: Run Privileged Container and Install CloudPanel
        run: |
          docker run --privileged --name cloudpanel-install -d jrei/systemd-debian:12 /sbin/init
          
          echo "Installing dependencies..."
          docker exec cloudpanel-install bash -c "apt update && apt install -y curl sudo gnupg unzip wget lsb-release"

          echo "Installing CloudPanel..."
          docker exec cloudpanel-install bash -c "curl -sSL https://installer.cloudpanel.io/ce/v2/install.sh | bash"

          echo "Stopping and committing the container..."
          docker stop cloudpanel-install
          docker commit cloudpanel-install ${{ secrets.DOCKER_USERNAME }}/cloudpanel:$LATEST_VERSION
          docker tag ${{ secrets.DOCKER_USERNAME }}/cloudpanel:$LATEST_VERSION ${{ secrets.DOCKER_USERNAME }}/cloudpanel:latest

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/cloudpanel:$LATEST_VERSION
          docker push ${{ secrets.DOCKER_USERNAME }}/cloudpanel:latest

      - name: Cleanup
        run: |
          docker rm -f cloudpanel-install || true
          docker rmi ${{ secrets.DOCKER_USERNAME }}/cloudpanel:$LATEST_VERSION || true
          docker rmi ${{ secrets.DOCKER_USERNAME }}/cloudpanel:latest || true

      - name: Commit updated version after push
        run: |
          echo "$LATEST_VERSION" > version.txt
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add version.txt
          git commit -m "Update version to $LATEST_VERSION"
          git push
