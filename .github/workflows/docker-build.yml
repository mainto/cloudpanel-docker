name: Build and Push CloudPanel Docker Image

on:
  schedule:
    - cron: '0 0 * * *'  # Runs every day at midnight UTC
  push:
    branches:
      - main
  workflow_dispatch:  # Allows manual trigger

jobs:
  check-release:
    runs-on: ubuntu-latest
    outputs:
      latest_version: ${{ env.LATEST_VERSION }}
      needs_build: ${{ env.NEEDS_BUILD }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get latest CloudPanel release
        id: get_version
        run: |
          latest_version=$(curl -s https://api.github.com/repos/cloudpanel-io/cloudpanel-ce/releases/latest | jq -r .tag_name)
          echo "Latest release: $latest_version"
          echo "LATEST_VERSION=$latest_version" >> "$GITHUB_ENV"

      - name: Compare with existing version
        id: compare_versions
        run: |
          current_version=$(cat version.txt 2>/dev/null || echo "none")
          if [ "$current_version" != "$LATEST_VERSION" ]; then
            echo "New version available: $LATEST_VERSION"
            echo "NEEDS_BUILD=true" >> "$GITHUB_ENV"
          else
            echo "Already up-to-date"
            echo "NEEDS_BUILD=false" >> "$GITHUB_ENV"
        env:
          LATEST_VERSION: ${{ env.LATEST_VERSION }}

  build-and-push:
    needs: check-release
    if: env.NEEDS_BUILD == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and tag Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/cloudpanel:${{ env.LATEST_VERSION }} .
          docker tag ${{ secrets.DOCKER_USERNAME }}/cloudpanel:${{ env.LATEST_VERSION }} ${{ secrets.DOCKER_USERNAME }}/cloudpanel:latest

      - name: Push to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/cloudpanel:${{ env.LATEST_VERSION }}
          docker push ${{ secrets.DOCKER_USERNAME }}/cloudpanel:latest

      - name: Commit updated version after push
        run: |
          echo "${{ env.LATEST_VERSION }}" > version.txt
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add version.txt
          git commit -m "Update version to ${{ env.LATEST_VERSION }}"
          git push
